{"version":3,"file":"js/main.chunk.js","sources":["C:/Users/Joseh/OneDrive/Desktop/project folder/twitter-showcase-app/client/src/App.js","C:/Users/Joseh/OneDrive/Desktop/project folder/twitter-showcase-app/client/src/Pages/Home.js","C:/Users/Joseh/OneDrive/Desktop/project folder/twitter-showcase-app/client/src/Pages/TweetFinder.js","C:/Users/Joseh/OneDrive/Desktop/project folder/twitter-showcase-app/client/src/Pages/UserTweet.js","C:/Users/Joseh/OneDrive/Desktop/project folder/twitter-showcase-app/client/src/components/RenderedTweetCard.js","C:/Users/Joseh/OneDrive/Desktop/project folder/twitter-showcase-app/client/src/components/TweetCard.js","C:/Users/Joseh/OneDrive/Desktop/project folder/twitter-showcase-app/client/src/images/corvette.png.jpg","C:/Users/Joseh/OneDrive/Desktop/project folder/twitter-showcase-app/client/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\"\r\nimport Home from './Pages/Home'\r\nimport UserTweet from './Pages/UserTweet'\r\nimport TweetFinder from './Pages/TweetFinder'\r\n\r\nimport { Container } from 'react-bootstrap'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Container className='App'>\r\n        <div>\r\n          <nav className='navbar navbar-expand-lg navbar-light bg-light' className='navbar navbar-dark bg-primary'>\r\n            <ul className='navbar-nav'>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/'>Home</Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/tweetfinder'>Tweet Finder</Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/usertweet'>User Tweet</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Switch>\r\n            <Route path='/tweetfinder' component={TweetFinder} />\r\n            <Route path='/usertweet' component={UserTweet} />\r\n            <Route path='/' component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport Corvette from '../images/corvette.png.jpg'\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return (<div>\r\n            <h1>Twitter Showcase App!</h1>\r\n\r\n            <img src={Corvette} className='float-right' alt='corvette' width='300' height='300' />\r\n\r\n            <h2>\r\n                This app utilizes data from the Twitter API to allow a person to search for recent\r\n                tweets of specific Twitter users. There is also a random tweet showcase for my\r\n                favorite Twitter users. Give it a try and look around!\r\n            </h2>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport RenderedTweetCard from '../components/RenderedTweetCard'\r\n\r\nclass TweetFinder extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            results: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.submitted = this.submitted.bind(this)\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { value } = e.target\r\n        this.setState({\r\n            name: value\r\n        })\r\n\r\n    }\r\n\r\n    async submitted(e) {\r\n        e.preventDefault()\r\n        const result = await axios(`/api/search-data?topic=${this.state.name}`)\r\n        this.setState({\r\n            results: result.data\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const tweetResults = this.state.results.map((tweet) => (\r\n            <RenderedTweetCard user={tweet.user} key={tweet.user.id} fullText={tweet.full_text} entities={tweet.entities} />\r\n        ))\r\n\r\n        return (\r\n            <div className='form-row py-1'>\r\n                <input\r\n                    className='form-control'\r\n                    name=\"search\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search?\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.value} />\r\n                <button className='btn btn-primary' onClick={this.submitted} >Submit</button>\r\n                <Row>\r\n                    <Col>\r\n                        {tweetResults}\r\n                    </Col>\r\n                </Row>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default TweetFinder","import React from 'react'\r\nimport axios from 'axios'\r\nimport TweetCard from '../components/TweetCard'\r\nimport RenderedTweetCard from '../components/RenderedTweetCard'\r\n\r\nimport { Col, Row } from 'react-bootstrap'\r\n\r\nclass UserTweet extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: [\r\n                {\r\n                    username: 'andy',\r\n                    tweet: {}\r\n                },\r\n                {\r\n                    username: 'corvette',\r\n                    tweet: {}\r\n                },\r\n                {\r\n                    username: 'twosetViolin',\r\n                    tweet: {}\r\n                },\r\n                {\r\n                    username: 'batmanDC',\r\n                    tweet: {}\r\n                },\r\n                {\r\n                    username: 'starwars',\r\n                    tweet: {}\r\n                }\r\n            ],\r\n            /* \r\n                        andy: [],\r\n                        corvette: [],\r\n                        twoSetViolin: [],\r\n                        batmanDC: [],\r\n                        starWars: [] */\r\n            random: []\r\n        }\r\n        this.getRandomData = this.getRandomData.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const newUsers = Promise.all(this.state.users.map(async user => {\r\n            const result = await axios(`/api/user-${user.username}`)\r\n            const [tweet] = result.data\r\n            const newUser = { ...user }\r\n            newUser.tweet = tweet\r\n            return newUser\r\n        }))\r\n\r\n        newUsers.then(users => {\r\n            this.setState({\r\n                users\r\n            })\r\n        })\r\n    }\r\n\r\n    isEmpty = (obj) => {\r\n        return Object.keys(obj).length === 0\r\n    }\r\n\r\n    getRandomData(username) {\r\n        const fetchItems = async () => {\r\n            const result = await axios(`/api/user-random?username=${username}`)\r\n            this.setState({\r\n                random: result.data\r\n            }, () => console.log(\"random\", this.state.random))\r\n        }\r\n        fetchItems()\r\n    }\r\n\r\n\r\n    render() {\r\n        const tweets = this.state.users.map(user => {\r\n            const { tweet } = user\r\n            console.log('tweet', tweet)\r\n            if (this.isEmpty(tweet)) return\r\n\r\n            return (<Col className='form-row py-1' key={tweet.user.id} onClick={() => this.getRandomData(tweet.user.screen_name)}>\r\n                <TweetCard user={tweet.user} />\r\n            </Col>)\r\n        })\r\n\r\n        const randomTweet = this.state.random.map((tweet) => (\r\n            <RenderedTweetCard user={tweet.user} key={tweet.user.id} fullText={tweet.full_text} entities={tweet.entities} />\r\n        ))\r\n\r\n        return (\r\n            <Row>\r\n                {tweets}\r\n                <Col className='form-row py-1'>\r\n                    {randomTweet}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserTweet","import React from \"react\"\r\n\r\n\r\n\r\nfunction RenderedTweetCard({ user, fullText, entities }) {\r\n       return (\r\n        <div className=\"bg-info\">\r\n            <img src={user.profile_image_url} alt=\"Profile-pic\" />\r\n            <h3>{user.name}</h3> <p>@{user.screen_name}</p>\r\n            <p>{user.description}</p>\r\n            {!entities.media ? null :<img src={entities.media[0].media_url} width='150' height='150'/>}\r\n            {<p>{fullText}</p>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default RenderedTweetCard","import React from \"react\"\r\n\r\nfunction TweetCard({ user }) {\r\n    return (\r\n        <div className=\"bg-info\">\r\n            <img src={user.profile_image_url} alt=\"Profile-pic\" />\r\n            <h3>{user.name}</h3> <p>@{user.screen_name}</p>\r\n            <p>@{user.description}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TweetCard","module.exports = __webpack_public_path__ + \"media/corvette.png.f752490f.jpg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"mappings":"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","sourceRoot":""}